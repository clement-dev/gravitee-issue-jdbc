version: '3.5'

services:
  ###################
  # PROXY
  ###################
  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    hostname: "traefik"
    command:
      - --log.level=DEBUG
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --entryPoints.web.forwardedHeaders.insecure=true
      - --entrypoints.web.address=:80
    labels:
      - "traefik.enable=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - gravitee-net
#  ###################
#  # GRAVITEE APIM
#  ###################
  elasticsearch:
   image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.10.2}
   container_name: gio_apim_elasticsearch
   restart: always
   volumes:
     - ./data/apim-elasticsearch:/usr/share/elasticsearch/data
   environment:
     - http.host=0.0.0.0
     - transport.host=0.0.0.0
     - xpack.security.enabled=false
     - xpack.monitoring.enabled=false
     - cluster.name=elasticsearch
     - bootstrap.memory_lock=true
     - discovery.type=single-node
     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
   ulimits:
     memlock:
       soft: -1
       hard: -1
     nofile: 65536
   ports:
     - "9200:9200"
   networks:
     - gravitee-net

  gateway:
   build:
     context: ./custom-gateway
     dockerfile: Dockerfile
   restart: always
   labels:
     - "traefik.enable=true"
   ports:
     # - "0.0.0.0:8082:8082"
     - "8082"
   depends_on:
     - db
     - elasticsearch
   volumes:
     - ./data/logs/apim-gateway:/opt/graviteeio-gateway/logs
     - ./config/gravitee/gateway/config:/opt/graviteeio-gateway/config
     - ./config/gravitee/gateway/jdbc-driver:/opt/graviteeio-gateway/plugins/ext/repository-jdbc
   environment:
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
   networks:
     - gravitee-net

  management_api:
   build:
     context: ./custom-apim
     dockerfile: Dockerfile
   container_name: gio_apim_management_api
   restart: always
   ports:
     - "8083:8083"
   links:
     - db
     - elasticsearch
   depends_on:
     - db
     - elasticsearch
   volumes:
     - ./data/logs/apim-management-api:/opt/graviteeio-management-api/logs
     - ./config/gravitee/management/config:/opt/graviteeio-management-api/config
     - ./config/gravitee/management/jdbc-driver:/opt/graviteeio-management-api/plugins/ext/repository-jdbc
   environment:
     - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
     - gravitee_email_enabled=true
     - gravitee_email_host=fakesmtp
     - gravitee_email_port=1025
   networks:
     - gravitee-net

  management_ui:
   image: graviteeio/apim-management-ui:3.15.4
   container_name: gio_apim_management_ui
   restart: always
   ports:
     - "8084:8080"
   depends_on:
     - management_api
   environment:
     - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
   volumes:
     - ./data/logs/apim-management-ui:/var/log/nginx
   networks:
     - gravitee-net

  portal_ui:
   image: graviteeio/apim-portal-ui:3.15.4
   container_name: gio_apim_portal_ui
   restart: always
   ports:
     - "8085:8080"
   depends_on:
     - management_api
   environment:
     - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
   volumes:
     - ./data/logs/apim-portal-ui:/var/log/nginx
   networks:
     - gravitee-net

  fakesmtp:
   image: reachfive/fake-smtp-server:0.8.1
   container_name: fake_smtp
   ports:
     - "1080:1080"
     - "1025:1025"
   networks:
     - gravitee-net

  db:
     build:
       context: ./postgres
       dockerfile: Dockerfile
     image: "issue/db:0.6.0"
     restart: always
     environment:
       POSTGRES_DB: gravitee
       POSTGRES_USER: admin
       POSTGRES_PASSWORD: admin
       PGDATA: /var/lib/postgresql/data
     volumes:
       - ./data/db-postgres:/var/lib/postgresql/data
     ports:
       - "0.0.0.0:5455:5432"
     networks:
       - gravitee-net

#  mongodb:
#    image: mongo:${MONGODB_VERSION:-3.6}
#    container_name: gio_apim_mongodb
#    restart: always
#    volumes:
#      - ./data/data-mongo:/data/db
#      - ./data/apim-mongodb:/var/log/mongodb
#    networks:
#      - gravitee-net

networks:
  gravitee-net:
    name: gravitee-net

volumes:
  data-elasticsearch:
  data-mongo: